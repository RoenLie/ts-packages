function y(e){if(typeof e=="function"&&(e={highlight:e}),!e||typeof e.highlight!="function")throw new Error("Must provide highlight function");return typeof e.langPrefix!="string"&&(e.langPrefix="language-"),{async:!!e.async,walkTokens(t){if(t.type!=="code")return;const n=a(t.lang);if(e.async)return Promise.resolve(e.highlight(t.text,n,t.lang||"")).then(i(t));const r=e.highlight(t.text,n,t.lang||"");if(r instanceof Promise)throw new Error("markedHighlight is not set to async but the highlight function is async. Set the async option to true on markedHighlight to await the async highlight function.");i(t)(r)},renderer:{code(t,n,r){const c=a(n),l=c?` class="${e.langPrefix}${s(c)}"`:"";return t=t.replace(/\n$/,""),`<pre><code${l}>${r?t:s(t,!0)}
</code></pre>`}}}}function a(e){return(e||"").match(/\S*/)[0]}function i(e){return t=>{typeof t=="string"&&t!==e.text&&(e.escaped=!0,e.text=t)}}const h=/[&<>"']/,u=new RegExp(h.source,"g"),f=/[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/,o=new RegExp(f.source,"g"),p={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},g=e=>p[e];function s(e,t){if(t){if(h.test(e))return e.replace(u,g)}else if(f.test(e))return e.replace(o,g);return e}export{y as markedHighlight};
